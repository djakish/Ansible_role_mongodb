---

- name: Configure a Replicaset
  any_errors_fatal: true
  community.mongodb.mongodb_replicaset:
    login_user: "{{ (not mongodb_root_admin_exist.failed) | ternary(mongodb_root_admin_name, omit) }}"
    login_password: "{{ (not mongodb_root_admin_exist.failed) | ternary(mongodb_root_admin_password, omit) }}"
    login_host: "localhost"
    login_port: "{{ mongodb_net_port }}"
    login_database: "{{ mongodb_login_database }}"
    replica_set: "{{ item.replicaset_name }}"
    ssl: "{{ (mongodb_net_ssl_enabled and mongodb_net_ssl_mode == 'requireSSL') | ternary(true, false) }}"
    reconfigure: "{{ (mongodb_replication_reconfigure and not mongodb_root_admin_exist.failed) | ternary(mongodb_replication_reconfigure, false) }}"
    force: true
    members: "{{ groups[item.group_name] | join(':' + mongodb_net_port | string + ',') + ':' + mongodb_net_port | string }}"
    arbiter_at_index: "{{ groups[item.group_name].index(mongodb_arbiter_index) if mongodb_arbiter_index is defined else omit }}"
  with_items:
    - replicaset_name: "{{ mongodb_replication_replset }}"
      group_name: "{{ mongodb_main_group }}"
  tags: [mongodb, mongodb-replicaset]

- name: Waiting for the Replicaset to Stabilise
  any_errors_fatal: true
  community.mongodb.mongodb_status:
    login_user: "{{ (not mongodb_root_admin_exist.failed) | ternary(mongodb_root_admin_name, omit) }}"
    login_password: "{{ (not mongodb_root_admin_exist.failed) | ternary(mongodb_root_admin_password, omit) }}"
    login_host: "localhost"
    login_port: "{{ mongodb_net_port }}"
    login_database: "{{ mongodb_login_database }}"
    replica_set: "{{ mongodb_replication_replset }}"
    ssl: "{{ (mongodb_net_ssl_enabled and mongodb_net_ssl_mode == 'requireSSL') | ternary(true, false) }}"
    poll: 10
    interval: 10
  register: mongodb_replicaset_status
  tags: [mongodb, mongodb-replicaset, mongodb-create-admin-users]

- name: Lookup PRIMARY Replicaset Member
  set_fact:
    mongodb_primary_host: "{{ item.key.split(':')[0] }}"
  with_items: 
    - "{{ lookup('dict', mongodb_replicaset_status.replicaset) }}"
  when: "'PRIMARY' in item.value"
  tags: [mongodb, mongodb-replicaset, mongodb-create-admin-users]
