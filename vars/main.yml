---
# Constant vars

vault_token: "{{ lookup('env','VAULT_TOKEN') }}"
vault_url: "{{ lookup('env','VAULT_ADDR') }}"

os: "linux"
bin_arch: "amd64"

mongodb_valid_groups: "{{ [mongodb_standalone_host_group, mongodb_replication_host_group, mongodb_sharded_host_group, mongodb_config_host_group, mongos_host_group] }}"

mongodb_major_version: "{{ mongodb_version[0:3] }}"
mongodb_apt_keyserver: keyserver.ubuntu.com

## Sharding options
mongodb_sharding_enabled: "{{ true if (mongodb_config_host_group in groups.keys() or mongos_host_group in groups.keys()) else false }}"
mongodb_sharding_role: "{{ 'shardsvr' if mongodb_sharded_host_group in mongodb_main_group else 'configsvr' if mongodb_main_group == mongodb_config_host_group else '' }}"

mongodb_net_ssl_PEMKeyFile_path: "{{ mongodb_net_tls_certificateKeyFile_path }}"
mongodb_net_ssl_CAFile_path: "{{ mongodb_net_tls_CAFile_path }}"
mongodb_net_ssl_CRLFile_path: "{{ mongodb_net_tls_CRLFile_path }}"
mongodb_net_ssl_clusterFile_path: "{{ mongodb_net_tls_clusterFile_path }}"
mongodb_net_ssl_clusterCAFile_path: "{{ mongodb_net_tls_clusterCAFile_path }}"
mongodb_net_tls_certificateKeyFile_path: /etc/ssl/mongodb.pem
mongodb_net_tls_CAFile_path: /etc/ssl/mongodb-ca.pem
mongodb_net_tls_CRLFile_path: /etc/ssl/mongodb-crl.pem
mongodb_net_tls_clusterFile_path: /etc/ssl/mongodb-cluster.pem
mongodb_net_tls_clusterCAFile_path: /etc/ssl/mongodb-cluster-ca.pem

mongodb_custom_backup_role: # When `mongodb_major_version` is version('6.0', '>=')
  - name: backupCustom
    state: present
    roles: [{ role: backup, db: "{{ mongodb_login_database }}" }]
    database: "{{ mongodb_login_database }}"
    privileges:
      - resource: { db: config, collection: system.preimages }
        actions: [ find ]
